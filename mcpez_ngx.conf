worker_processes  1;
daemon on;

events {
    worker_connections  102400;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for"';

    server {
        listen       80;

        access_log  /var/log/nginx/access.log  main;
	    error_log   /var/log/nginx/error.log  error;

        location / {
            # 界面界面
            root /data/app/webui;
            index index.html;
        }

        location /api {
            # API 代理设置
            rewrite ^/api/(.*)$ /$1 break;
            proxy_pass http://127.0.0.1:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 5s;
        }


        location /mcp/ {
            # MCP 代理设置，真的mcp都会在这里被挂载
            set $mcp_upstream "unix:/tmp";
            set $original_uri $request_uri;

            keepalive_timeout 180;

            rewrite_by_lua_block {

                local captures, err = ngx.re.match(ngx.var.request_uri, "^/mcp/([a-zA-Z0-9\\-_]+)(/.*)?","jio")
                if not captures then
                    ngx.status = ngx.HTTP_BAD_REQUEST
                    ngx.log(ngx.ERR, "Invalid request format: ", ngx.var.request_uri)
                    ngx.say("Invalid request format")
                    return
                end

                local key = captures[1]
                local path_suffix = captures[2] or "/"


                ngx.var.mcp_upstream = "unix:/var/run/mcpez/"..key..".socks"
            }

            # 代理设置
            proxy_pass http://$mcp_upstream;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 5s;
            proxy_buffering off;
        }

    }
}